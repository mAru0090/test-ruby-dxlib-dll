rubyでDxLibを使う場合、C/C++にインタプリタを直接埋め込んでやる場合だと、
どうにかやってもrubyの標準ライブラリが一部使えない。
そのため、どの言語でも使えるFFIの仕組みを使い、
DLLを使用して呼び出しを書いて、Ruby.exeでの呼び出しが一番いい。
結局その場合ruby.exeインタプリタを使うが、gemやruby標準ライブラリが普通に使えるほか、
そこまでパフォーマンスは気にならんだろう。

また、neriを使用してexe化はできるが、自身の環境だけかもしれないが、
core_extだけうまくコピーされないせいで、生成されたmain.exeを実行しても
kernel_require.rbなどでエラーになるため、
下記のように、
xcopy "E:\windows\dev-tools\Ruby33-x64\lib\ruby\3.3.0\rubygems\core_ext\" %COREEXT%  /E /I /H /Y
のようにして各自のRubyインストーラーディレクトリ付属のcore_extをそのままコピーする必要あり。
これするといけた。ただ、これはRuby33以前では必要ないほか、なぜかこのDxLibを使用するこのスクリプト実行では、
neriでexe化後、そもそもエラーが出るため、Ruby33以降じゃないとダメっぽい

というか、他言語でRubyを埋め込みたい場合はmrubyを埋め込む方が安全で早いかも。